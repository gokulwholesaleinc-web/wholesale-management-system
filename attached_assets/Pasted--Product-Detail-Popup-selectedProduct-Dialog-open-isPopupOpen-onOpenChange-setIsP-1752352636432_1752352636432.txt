{/* Product Detail Popup */}
{selectedProduct && (
  <Dialog open={isPopupOpen} onOpenChange={setIsPopupOpen}>
    <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
      <DialogHeader>
        <DialogTitle className="flex items-center gap-2">
          <Eye className="h-5 w-5" />
          Product Details
        </DialogTitle>
      </DialogHeader>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Product Image */}
        <div className="space-y-4">
          <div className="aspect-square bg-gray-100 rounded-lg overflow-hidden">
            {selectedProduct.imageUrl ? (
              <img 
                src={selectedProduct.imageUrl} 
                alt={selectedProduct.name}
                className="w-full h-full object-contain"
              />
            ) : (
              <div className="w-full h-full flex items-center justify-center text-gray-500">
                <Package className="h-16 w-16 opacity-50" />
              </div>
            )}
          </div>
          
          {/* Product Details */}
          <div className="space-y-3">
            <div className="flex items-center gap-2">
              <Barcode className="h-4 w-4 text-gray-600" />
              <span className="text-sm text-gray-600">
                {selectedProduct.sku || 'No SKU'}
              </span>
            </div>
            
            {selectedProduct.upcCode && (
              <div className="flex items-center gap-2">
                <Barcode className="h-4 w-4 text-gray-600" />
                <span className="text-sm text-gray-600">UPC: {selectedProduct.upcCode}</span>
              </div>
            )}
            
            <div className="flex items-center gap-2">
              <Package className="h-4 w-4 text-gray-600" />
              <span className="text-sm text-gray-600">
                Stock: {selectedProduct.stock} units
              </span>
            </div>
          </div>
        </div>
        
        {/* Product Info & Actions */}
        <div className="space-y-4">
          <div>
            <h3 className="text-xl font-bold mb-2">{selectedProduct.name}</h3>
            {selectedProduct.description && (
              <p className="text-gray-600 text-sm mb-4">{selectedProduct.description}</p>
            )}
          </div>
          
          {/* Price Display */}
          <div className="bg-green-50 p-4 rounded-lg">
            <div className="text-2xl font-bold text-green-600 mb-1">
              ${selectedProduct.price?.toFixed(2)}
            </div>
            {selectedProduct.priceLevel2 && selectedProduct.priceLevel2 !== selectedProduct.price && (
              <div className="text-sm text-gray-600">
                Bulk pricing available
              </div>
            )}
          </div>
          
          {/* Quantity Selector */}
          <div className="space-y-3">
            <label className="text-sm font-medium">Quantity</label>
            <div className="flex items-center gap-3">
              <Button
                variant="outline"
                size="sm"
                onClick={() => setPopupQuantity(Math.max(1, popupQuantity - 1))}
                disabled={popupQuantity <= 1}
              >
                <Minus className="h-4 w-4" />
              </Button>
              
              <Input
                type="number"
                min="1"
                value={popupQuantity}
                onChange={(e) => setPopupQuantity(Math.max(1, parseInt(e.target.value) || 1))}
                className="w-20 text-center"
              />
              
              <Button
                variant="outline"
                size="sm"
                onClick={() => setPopupQuantity(popupQuantity + 1)}
                disabled={popupQuantity >= selectedProduct.stock}
              >
                <Plus className="h-4 w-4" />
              </Button>
            </div>
          </div>
          
          {/* Action Buttons */}
          <div className="space-y-2">
            <Button
              onClick={() => handleAddToCart(selectedProduct.id, popupQuantity)}
              disabled={selectedProduct.stock === 0 || isAddingToCart}
              className="w-full"
            >
              {isAddingToCart ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  Adding...
                </>
              ) : (
                <>
                  <ShoppingCart className="h-4 w-4 mr-2" />
                  Add {popupQuantity} to Cart
                </>
              )}
            </Button>
            
            <Button
              variant="outline"
              onClick={() => setIsPopupOpen(false)}
              className="w-full"
            >
              Close
            </Button>
          </div>
        </div>
      </div>
    </DialogContent>
  </Dialog>
)}